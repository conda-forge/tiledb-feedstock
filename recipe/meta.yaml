{% set name = "TileDB" %}
{% set version = "2.20.1" %}

package:
  name: tiledb
  version: {{ version }}

source:
  url: https://github.com/TileDB-Inc/{{ name }}/archive/{{ version }}.tar.gz
  sha256: d9d52de7eef25c9e358f0dd6e696dc11a08d5b4d6c4ede88f11afffd32ec31c2
  patches:
    # This patch removes the find_package(LZ4) call and falls back to the pre-vcpkg
    # mechanism of using find_library.
    # The lz4 Conda package does not export CMake targets, and the vcpkg port uses
    # a custom CMakeLists.txt, dating from before an official one was introduced.
    # Moreover, the upstream lz4 exports separate static/shared targets and uses
    # a different casing of the target's name from vcpkg.
    # After lz4 publishes a unified CMake target with https://github.com/lz4/lz4/pull/1372,
    # we will have to align Conda, vcpkg and TileDB, and then we can remove this patch.
    - lz4-fix.patch

build:
  number: 3
  run_exports:
    # https://abi-laboratory.pro/?view=timeline&l=tiledb
    - {{ pin_subpackage('tiledb', max_pin='x.x') }}

requirements:
  build:
    - make  # [unix]
    - cmake
    - ninja  # [win]
    - pkg-config  # [not win]
    - {{ compiler('cxx') }}
    - file  # [arm64]
    - zip  # [not win]
    - unzip  # [not win]
    - curl  # [not win]
    - tar  # [not win]
    # These are declared as vcpkg dependencies by TileDB but are not actually used.
    - libxml2  # [not win]
  host:
    - aws-sdk-cpp
    - aws-crt-cpp
    - azure-core-cpp
    - azure-storage-common-cpp
    - azure-storage-blobs-cpp
    - bzip2
    - libabseil
    - libgoogle-cloud-devel
    - libgoogle-cloud-storage-devel
    - libcurl
    - lz4-c
    - openssl
    - zlib
    - zstd
    # see: https://github.com/conda-forge/google-cloud-cpp-feedstock/pull/108,
    - libcrc32c  # [win]
test:
  requires:
    - {{ compiler('cxx') }}
    - cmake
    - make  # [unix]
  #  downstreams:
  #  - tiledb-py
  commands:
    - test -e $PREFIX/include/tiledb/tiledb.h  # [not win]
    - test -e $PREFIX/include/tiledb/tiledb  # [not win]
    - test -e $PREFIX/lib/libtiledb$SHLIB_EXT  # [not win]

    - if exist %LIBRARY_INC%\\tiledb\\tiledb (exit 0) else (exit 1)  # [win]
    - if exist %LIBRARY_INC%\\tiledb\\tiledb.h (exit 0) else (exit 1)  # [win]
    - if exist %LIBRARY_LIB%\\tiledb.lib (exit 0) else (exit 1)  # [win]
    - if exist %LIBRARY_LIB%\\cmake\\TileDB\\TileDBConfig.cmake (exit 0) else (exit 1)  # [win]
    - if exist %LIBRARY_BIN%\\tiledb.dll (exit 0) else (exit 1)  # [win]

    # libcurl must be installed at runtime
    - test -e $PREFIX/lib/libcurl$SHLIB_EXT  # [not win]
    - if exist %LIBRARY_LIB%\\libcurl.lib (exit 0) else (exit 1)  # [win]
    - if exist %LIBRARY_BIN%\\libcurl.dll (exit 0) else (exit 1)  # [win]

about:
  home: http://tiledb.io
  license: MIT
  license_family: MIT
  license_file: LICENSE
  summary: TileDB sparse and dense multi-dimensional array data management
  description: |
    TileDB is an efficient multi-dimensional array management system which introduces
    a novel on-disk format that can effectively store dense and sparse array data with
    support for fast updates and reads. It features excellent compression, and an efficient
    parallel I/O system with high scalability.
  doc_url: http://docs.tiledb.io
  dev_url: https://github.com/TileDB-Inc/TileDB

extra:
  recipe-maintainers:
    - jdblischak
    - KiterLuc
    - akrherz
    - shelnutt2
    - ihnorton
    - nguyenv
    - xylar
